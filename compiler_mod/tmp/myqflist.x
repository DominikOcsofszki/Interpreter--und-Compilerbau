src/Expression.py:9:            ic(node_info)
src/ast/write_read_ast.py:46:#         ic(self, id,dots)
src/ast/struct_ast.py:34:    ic("=============h15==================")
src/ast/struct_ast.py:37:    ic(struct_get("struct_env"))
src/ast/struct_ast.py:67:            ic(val)
src/ast/struct_ast.py:68:            ic(struct_env)
src/ast/struct_ast.py:70:            ic(res)
src/ast/struct_ast.py:98:        ic(">>",env)
src/ast/struct_ast.py:99:        ic(">>",env.struct_dict)
src/ast/struct_ast.py:101:        ic(id_struct_or_parent_struct_get)
src/ast/struct_ast.py:103:        ic(struct_entry)
src/ast/struct_ast.py:124:        # ic(env)
src/ast/struct_ast.py:125:        # ic(self.id_string)
src/ast/struct_ast.py:126:        # ic(self.value)
src/ast/struct_ast.py:128:        # ic(struct_env)
src/ast/struct_ast.py:131:        ic(env.struct_dict)
src/ast/struct_ast.py:148:        # ic("=============h14==================")
src/ast/struct_ast.py:149:        # # ic("=============h12==================")
src/ast/struct_ast.py:150:        # # ic(self.id_string)
src/ast/struct_ast.py:151:        # # ic(self.value)
src/ast/struct_ast.py:152:        # # ic(self.value.eval(env)[1])
src/ast/struct_ast.py:160:        #     ic(struct_dict)
src/ast/struct_ast.py:161:        #     ic(env.struct_dict)
src/top_imports.py:16:    ic(environment.env_name,environment.env_dict)
src/top_imports.py:19:    ic(ENV_IMPORTS.env_name,ENV_IMPORTS.env_dict)
tmp/myqflist.x:1:src/Expression.py:9:            ic(node_info)
tmp/myqflist.x:2:src/ast/write_read_ast.py:46:#         ic(self, id,dots)
src/tok_helper.py:42:    # ic(t.nr)
src/tok_helper.py:48:    #     ic(pos_dict[82].__dict__)
src/tok_helper.py:49:    #     ic(pos_dict[82].nr)
src/ast/struct_ast.py.bak:58:                # ic(id,entry,n_dots)
src/ast/struct_ast.py.bak:59:                # ic(env.parent[id])
src/ast/struct_ast.py.bak:64:        # ic(self.id)
src/ast/struct_ast.py.bak:73:        # ic(id)
src/ast/struct_ast.py.bak:76:                # ic(self.id_test,self.entry_test,self.n_dots_test)
src/ast/struct_ast.py.bak:77:                # ic(env.parent[self.parentString_as_readExpression.eval(env)[1]])
src/top_parser.py:30:            ic("TODO: implement error handling for tests, save current filename")
src/top_parser.py:31:            ic(p.__dict__)
src/top_parser.py:32:            ic(p.lexer.lineno)
src/environment.py:62:        # ic(self,key)
src/environment.py:63:        ic("=====get_struct_dict_entry========h20==================")
src/environment.py:70:        # ic(self,key,entry)
src/environment.py:71:        ic("=============h21==set_struct_dict_entry================")
src/environment.py:74:    #     ic("==>print all print_all_envs====================")
src/environment.py:76:    #         ic("=============h==================")
src/environment.py:77:    #         ic(new_env.env_name, new_env, new_env.struct_dict)
src/environment.py:78:    #     ic("print all print_all_envs<======================")
src/ast/struct_ast.py.bak.latest0:11:        # ic(self, entries)
src/ast/struct_ast.py.bak.latest0:43:        # ic("=============h19==================")
src/ast/struct_ast.py.bak.latest0:44:        # ic(self,dot_expr, fun_args)
src/ast/struct_ast.py.bak.latest0:49:        # ic("=============h23==================")
src/ast/struct_ast.py.bak.latest0:52:        #         ic(self.id_struct,self.entry,self.dots_count)
src/ast/struct_ast.py.bak.latest0:53:        #         # ic(env.parent[self.parentString_as_readExpression.eval(env)[1]])
src/ast/struct_ast.py.bak.latest0:54:        #         # ic(env.parent[self.parentString_as_readExpression.eval(env)[1]])
src/ast/struct_ast.py.bak.latest0:61:        # ic(struct_from_env)
src/ast/struct_ast.py.bak.latest0:63:            # ic(self.dots_count)
src/ast/struct_ast.py.bak.latest0:68:            # ic(self.entry)
src/ast/struct_ast.py.bak.latest0:70:            # ic(value_ret)
RUN.py:23:        ic(">>>",error,">>>")
RUN.py:42:                ic("===========================================")
RUN.py:43:                ic(">>>global/top env after run:",environment)
RUN.py:44:                ic("===========================================")
RUN.py:47:            ic(">>>",error,">>>")
RUN.py:55:ic(lexer.my_helper)
src/parser/lambda_parser.py:34:    # ic(type(p))
