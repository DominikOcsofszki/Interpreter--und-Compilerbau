
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'expressionleftletrecleft,rightassignrightlambdarightlocalnonassocthendononassocelseleftorleftandnandleft=neqseqleft<>legeleft+-left*/left([)]rightnotUMINUSBOOL ID NUMBER and array as assign char do else eq float for ge if import in lambda le letrec list local loop nand neqs not or string struct then whileexpression : floatexpression : local ID assign expression in expressionexpression : IDexpression : import ID as IDexpression : ID lambda expression\n    |   lambda expression\n    expression : letrec ID assign expression lambda expressionexpression : "{" sequence "}" expression : struct "{" sequence "}" expression :   expression and expression\n                    | expression eq expression\n                    | expression \'=\' expression\n                    | expression \'>\' expression\n                    | expression \'<\' expression\n                    | expression ge expression\n                    | expression le expression\n                    | expression neqs expression\n                    | expression or expression\n                    | expression nand expression\n    expression : string expression : ID assign expressionexpression : import IDsequence :   sequence ";" expression \n                |   expression expression : ID "." ID expression : "-" expression %prec UMINUSexpression : char expression : if expression then expression\n    expression :   expression "+" expression\n                    | expression "-" expression\n                    | expression \'*\' expression\n                    | expression \'/\' expression\n    id_list : expression "," id_list\n        |           expression\n    expression : "[" id_list "]"expression : if expression then expression else expression\n    expression : ID "[" NUMBER "]"expression : not expression\n    expression : loop expression do expression\n    expression : "(" id_list ")"expression : NUMBERexpression : "(" id_list ")" lambda expression expression : BOOLexpression : "(" expression ")"expression :  ID "(" ")"expression :  ID "(" id_list ")"expression : for expression ";" expression ";" expression do expression\n    expression : while expression do expression\n    '
    
_lr_action_items = {'float':([0,6,8,11,13,14,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,41,47,72,80,82,84,86,87,90,91,102,105,106,107,109,114,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'local':([0,6,8,11,13,14,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,41,47,72,80,82,84,86,87,90,91,102,105,106,107,109,114,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'ID':([0,3,5,6,7,8,11,13,14,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,41,47,72,79,80,82,84,86,87,90,91,102,105,106,107,109,114,],[4,36,42,4,44,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,75,4,4,4,95,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'import':([0,6,8,11,13,14,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,41,47,72,80,82,84,86,87,90,91,102,105,106,107,109,114,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'lambda':([0,2,4,6,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,41,42,43,47,48,52,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,80,81,82,84,85,86,87,88,89,90,91,93,94,95,96,98,99,101,102,104,105,106,107,108,109,110,111,112,114,115,],[6,-1,37,6,6,-20,6,-27,6,6,-41,6,6,6,-43,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-22,-6,6,-26,-38,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-29,-30,-31,-32,6,-5,-21,-25,-45,6,-8,6,6,-35,6,6,-40,-44,6,6,-37,-46,-4,106,-9,-28,-39,6,-48,6,6,6,-42,6,-2,-7,-36,6,-47,]),'letrec':([0,6,8,11,13,14,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,41,47,72,80,82,84,86,87,90,91,102,105,106,107,109,114,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'{':([0,6,8,9,11,13,14,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,41,47,72,80,82,84,86,87,90,91,102,105,106,107,109,114,],[8,8,8,47,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'struct':([0,6,8,11,13,14,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,41,47,72,80,82,84,86,87,90,91,102,105,106,107,109,114,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'string':([0,6,8,11,13,14,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,41,47,72,80,82,84,86,87,90,91,102,105,106,107,109,114,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'-':([0,1,2,4,6,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,41,42,43,46,47,48,49,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,],[11,33,-1,-3,11,11,-20,11,-27,11,11,-41,11,11,11,-43,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-22,33,33,11,-26,33,33,-38,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-29,-30,-31,-32,11,33,33,-25,-45,11,-8,11,11,-35,11,11,-40,-44,11,11,33,-37,-46,-4,33,33,-9,33,33,11,33,33,11,11,11,33,11,33,33,33,33,11,33,]),'char':([0,6,8,11,13,14,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,41,47,72,80,82,84,86,87,90,91,102,105,106,107,109,114,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'if':([0,6,8,11,13,14,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,41,47,72,80,82,84,86,87,90,91,102,105,106,107,109,114,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'[':([0,4,6,8,11,13,14,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,41,47,72,80,82,84,86,87,90,91,102,105,106,107,109,114,],[14,40,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'not':([0,6,8,11,13,14,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,41,47,72,80,82,84,86,87,90,91,102,105,106,107,109,114,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'loop':([0,6,8,11,13,14,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,41,47,72,80,82,84,86,87,90,91,102,105,106,107,109,114,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'(':([0,4,6,8,11,13,14,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,41,47,72,80,82,84,86,87,90,91,102,105,106,107,109,114,],[18,41,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'NUMBER':([0,6,8,11,13,14,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,40,41,47,72,80,82,84,86,87,90,91,102,105,106,107,109,114,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,76,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'BOOL':([0,6,8,11,13,14,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,41,47,72,80,82,84,86,87,90,91,102,105,106,107,109,114,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'for':([0,6,8,11,13,14,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,41,47,72,80,82,84,86,87,90,91,102,105,106,107,109,114,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'while':([0,6,8,11,13,14,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,41,47,72,80,82,84,86,87,90,91,102,105,106,107,109,114,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'$end':([1,2,4,10,12,15,19,42,43,48,52,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,77,81,85,88,89,93,94,95,98,99,101,104,108,110,111,112,115,],[0,-1,-3,-20,-27,-41,-43,-22,-6,-26,-38,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-29,-30,-31,-32,-5,-21,-25,-45,-8,-35,-40,-44,-37,-46,-4,-9,-28,-39,-48,-42,-2,-7,-36,-47,]),'and':([1,2,4,10,12,15,19,42,43,46,48,49,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,77,81,85,88,89,92,93,94,95,96,97,98,99,101,103,104,108,110,111,112,113,115,],[22,-1,-3,-20,-27,-41,-43,-22,22,22,-26,22,22,-38,22,22,22,22,-10,-11,-12,-13,-14,-15,-16,-17,22,-19,-29,-30,-31,-32,22,22,-25,-45,-8,-35,-40,-44,22,-37,-46,-4,22,22,-9,22,22,22,22,22,22,22,22,22,22,]),'eq':([1,2,4,10,12,15,19,42,43,46,48,49,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,77,81,85,88,89,92,93,94,95,96,97,98,99,101,103,104,108,110,111,112,113,115,],[23,-1,-3,-20,-27,-41,-43,-22,23,23,-26,23,23,-38,23,23,23,23,23,-11,-12,-13,-14,-15,-16,-17,23,23,-29,-30,-31,-32,23,23,-25,-45,-8,-35,-40,-44,23,-37,-46,-4,23,23,-9,23,23,23,23,23,23,23,23,23,23,]),'=':([1,2,4,10,12,15,19,42,43,46,48,49,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,77,81,85,88,89,92,93,94,95,96,97,98,99,101,103,104,108,110,111,112,113,115,],[24,-1,-3,-20,-27,-41,-43,-22,24,24,-26,24,24,-38,24,24,24,24,24,-11,-12,-13,-14,-15,-16,-17,24,24,-29,-30,-31,-32,24,24,-25,-45,-8,-35,-40,-44,24,-37,-46,-4,24,24,-9,24,24,24,24,24,24,24,24,24,24,]),'>':([1,2,4,10,12,15,19,42,43,46,48,49,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,77,81,85,88,89,92,93,94,95,96,97,98,99,101,103,104,108,110,111,112,113,115,],[25,-1,-3,-20,-27,-41,-43,-22,25,25,-26,25,25,-38,25,25,25,25,25,25,25,-13,-14,-15,-16,25,25,25,-29,-30,-31,-32,25,25,-25,-45,-8,-35,-40,-44,25,-37,-46,-4,25,25,-9,25,25,25,25,25,25,25,25,25,25,]),'<':([1,2,4,10,12,15,19,42,43,46,48,49,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,77,81,85,88,89,92,93,94,95,96,97,98,99,101,103,104,108,110,111,112,113,115,],[26,-1,-3,-20,-27,-41,-43,-22,26,26,-26,26,26,-38,26,26,26,26,26,26,26,-13,-14,-15,-16,26,26,26,-29,-30,-31,-32,26,26,-25,-45,-8,-35,-40,-44,26,-37,-46,-4,26,26,-9,26,26,26,26,26,26,26,26,26,26,]),'ge':([1,2,4,10,12,15,19,42,43,46,48,49,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,77,81,85,88,89,92,93,94,95,96,97,98,99,101,103,104,108,110,111,112,113,115,],[27,-1,-3,-20,-27,-41,-43,-22,27,27,-26,27,27,-38,27,27,27,27,27,27,27,-13,-14,-15,-16,27,27,27,-29,-30,-31,-32,27,27,-25,-45,-8,-35,-40,-44,27,-37,-46,-4,27,27,-9,27,27,27,27,27,27,27,27,27,27,]),'le':([1,2,4,10,12,15,19,42,43,46,48,49,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,77,81,85,88,89,92,93,94,95,96,97,98,99,101,103,104,108,110,111,112,113,115,],[28,-1,-3,-20,-27,-41,-43,-22,28,28,-26,28,28,-38,28,28,28,28,28,28,28,-13,-14,-15,-16,28,28,28,-29,-30,-31,-32,28,28,-25,-45,-8,-35,-40,-44,28,-37,-46,-4,28,28,-9,28,28,28,28,28,28,28,28,28,28,]),'neqs':([1,2,4,10,12,15,19,42,43,46,48,49,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,77,81,85,88,89,92,93,94,95,96,97,98,99,101,103,104,108,110,111,112,113,115,],[29,-1,-3,-20,-27,-41,-43,-22,29,29,-26,29,29,-38,29,29,29,29,29,-11,-12,-13,-14,-15,-16,-17,29,29,-29,-30,-31,-32,29,29,-25,-45,-8,-35,-40,-44,29,-37,-46,-4,29,29,-9,29,29,29,29,29,29,29,29,29,29,]),'or':([1,2,4,10,12,15,19,42,43,46,48,49,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,77,81,85,88,89,92,93,94,95,96,97,98,99,101,103,104,108,110,111,112,113,115,],[30,-1,-3,-20,-27,-41,-43,-22,30,30,-26,30,30,-38,30,30,30,30,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-29,-30,-31,-32,30,30,-25,-45,-8,-35,-40,-44,30,-37,-46,-4,30,30,-9,30,30,30,30,30,30,30,30,30,30,]),'nand':([1,2,4,10,12,15,19,42,43,46,48,49,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,77,81,85,88,89,92,93,94,95,96,97,98,99,101,103,104,108,110,111,112,113,115,],[31,-1,-3,-20,-27,-41,-43,-22,31,31,-26,31,31,-38,31,31,31,31,-10,-11,-12,-13,-14,-15,-16,-17,31,-19,-29,-30,-31,-32,31,31,-25,-45,-8,-35,-40,-44,31,-37,-46,-4,31,31,-9,31,31,31,31,31,31,31,31,31,31,]),'+':([1,2,4,10,12,15,19,42,43,46,48,49,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,77,81,85,88,89,92,93,94,95,96,97,98,99,101,103,104,108,110,111,112,113,115,],[32,-1,-3,-20,-27,-41,-43,-22,32,32,-26,32,32,-38,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-29,-30,-31,-32,32,32,-25,-45,-8,-35,-40,-44,32,-37,-46,-4,32,32,-9,32,32,32,32,32,32,32,32,32,32,]),'*':([1,2,4,10,12,15,19,42,43,46,48,49,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,77,81,85,88,89,92,93,94,95,96,97,98,99,101,103,104,108,110,111,112,113,115,],[34,-1,-3,-20,-27,-41,-43,-22,34,34,-26,34,34,-38,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-31,-32,34,34,-25,-45,-8,-35,-40,-44,34,-37,-46,-4,34,34,-9,34,34,34,34,34,34,34,34,34,34,]),'/':([1,2,4,10,12,15,19,42,43,46,48,49,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,77,81,85,88,89,92,93,94,95,96,97,98,99,101,103,104,108,110,111,112,113,115,],[35,-1,-3,-20,-27,-41,-43,-22,35,35,-26,35,35,-38,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-31,-32,35,35,-25,-45,-8,-35,-40,-44,35,-37,-46,-4,35,35,-9,35,35,35,35,35,35,35,35,35,35,]),'}':([2,4,10,12,15,19,42,43,45,46,48,52,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,77,81,83,85,88,89,93,94,95,97,98,99,101,104,108,110,111,112,115,],[-1,-3,-20,-27,-41,-43,-22,-6,81,-24,-26,-38,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-29,-30,-31,-32,-5,-21,-25,-45,-8,98,-35,-40,-44,-37,-46,-4,-23,-9,-28,-39,-48,-42,-2,-7,-36,-47,]),';':([2,4,10,12,15,19,42,43,45,46,48,52,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,77,81,83,85,88,89,93,94,95,97,98,99,101,103,104,108,110,111,112,115,],[-1,-3,-20,-27,-41,-43,-22,-6,82,-24,-26,-38,90,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-29,-30,-31,-32,-5,-21,-25,-45,-8,82,-35,-40,-44,-37,-46,-4,-23,-9,-28,-39,109,-48,-42,-2,-7,-36,-47,]),'then':([2,4,10,12,15,19,42,43,48,49,52,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,77,81,85,88,89,93,94,95,98,99,101,104,108,110,111,112,115,],[-1,-3,-20,-27,-41,-43,-22,-6,-26,84,-38,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-29,-30,-31,-32,-5,-21,-25,-45,-8,-35,-40,-44,-37,-46,-4,-9,-28,-39,-48,-42,-2,-7,-36,-47,]),',':([2,4,10,12,15,19,42,43,48,51,52,55,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,77,81,85,88,89,93,94,95,98,99,101,104,108,110,111,112,115,],[-1,-3,-20,-27,-41,-43,-22,-6,-26,86,-38,86,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-29,-30,-31,-32,-5,-21,-25,-45,-8,-35,-40,-44,-37,-46,-4,-9,-28,-39,-48,-42,-2,-7,-36,-47,]),']':([2,4,10,12,15,19,42,43,48,50,51,52,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,81,85,88,89,93,94,95,98,99,100,101,104,108,110,111,112,115,],[-1,-3,-20,-27,-41,-43,-22,-6,-26,85,-34,-38,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-29,-30,-31,-32,-5,-21,-25,93,-45,-8,-35,-40,-44,-37,-46,-4,-9,-28,-33,-39,-48,-42,-2,-7,-36,-47,]),'do':([2,4,10,12,15,19,42,43,48,52,53,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,77,81,85,88,89,93,94,95,98,99,101,104,108,110,111,112,113,115,],[-1,-3,-20,-27,-41,-43,-22,-6,-26,-38,87,91,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-29,-30,-31,-32,-5,-21,-25,-45,-8,-35,-40,-44,-37,-46,-4,-9,-28,-39,-48,-42,-2,-7,-36,114,-47,]),')':([2,4,10,12,15,19,41,42,43,48,51,52,54,55,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,77,78,81,85,88,89,93,94,95,98,99,100,101,104,108,110,111,112,115,],[-1,-3,-20,-27,-41,-43,77,-22,-6,-26,-34,-38,88,89,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-29,-30,-31,-32,-5,-21,-25,-45,94,-8,-35,-40,-44,-37,-46,-4,-9,-28,-33,-39,-48,-42,-2,-7,-36,-47,]),'in':([2,4,10,12,15,19,42,43,48,52,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,77,81,85,88,89,92,93,94,95,98,99,101,104,108,110,111,112,115,],[-1,-3,-20,-27,-41,-43,-22,-6,-26,-38,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-29,-30,-31,-32,-5,-21,-25,-45,-8,-35,-40,-44,105,-37,-46,-4,-9,-28,-39,-48,-42,-2,-7,-36,-47,]),'else':([2,4,10,12,15,19,42,43,48,52,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,77,81,85,88,89,93,94,95,98,99,101,104,108,110,111,112,115,],[-1,-3,-20,-27,-41,-43,-22,-6,-26,-38,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-29,-30,-31,-32,-5,-21,-25,-45,-8,-35,-40,-44,-37,-46,-4,-9,107,-39,-48,-42,-2,-7,-36,-47,]),'assign':([4,36,44,],[38,72,80,]),'.':([4,],[39,]),'as':([42,],[79,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,6,8,11,13,14,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,41,47,72,80,82,84,86,87,90,91,102,105,106,107,109,114,],[1,43,46,48,49,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,51,46,92,96,97,99,51,101,103,104,108,110,111,112,113,115,]),'sequence':([8,47,],[45,83,]),'id_list':([14,18,41,86,],[50,54,78,100,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> float','expression',1,'p_expression_types_float','types_parser.py',12),
  ('expression -> local ID assign expression in expression','expression',6,'p_expression_local','local_parser.py',13),
  ('expression -> ID','expression',1,'p_expression_read_id','var_parser.py',13),
  ('expression -> import ID as ID','expression',4,'p_expression_import_as','import_parser.py',14),
  ('expression -> ID lambda expression','expression',3,'p_expression_lambda','lambda_parser.py',14),
  ('expression -> lambda expression','expression',2,'p_expression_lambda','lambda_parser.py',15),
  ('expression -> letrec ID assign expression lambda expression','expression',6,'p_expression_letrec','letrec_parser.py',14),
  ('expression -> { sequence }','expression',3,'p_expression_sequence','sequences_parser.py',14),
  ('expression -> struct { sequence }','expression',4,'p_expression_struct','struct_parser.py',15),
  ('expression -> expression and expression','expression',3,'p_expression_binary_operators_bool','bool_parser.py',16),
  ('expression -> expression eq expression','expression',3,'p_expression_binary_operators_bool','bool_parser.py',17),
  ('expression -> expression = expression','expression',3,'p_expression_binary_operators_bool','bool_parser.py',18),
  ('expression -> expression > expression','expression',3,'p_expression_binary_operators_bool','bool_parser.py',19),
  ('expression -> expression < expression','expression',3,'p_expression_binary_operators_bool','bool_parser.py',20),
  ('expression -> expression ge expression','expression',3,'p_expression_binary_operators_bool','bool_parser.py',21),
  ('expression -> expression le expression','expression',3,'p_expression_binary_operators_bool','bool_parser.py',22),
  ('expression -> expression neqs expression','expression',3,'p_expression_binary_operators_bool','bool_parser.py',23),
  ('expression -> expression or expression','expression',3,'p_expression_binary_operators_bool','bool_parser.py',24),
  ('expression -> expression nand expression','expression',3,'p_expression_binary_operators_bool','bool_parser.py',25),
  ('expression -> string','expression',1,'p_expression_types_string','types_parser.py',16),
  ('expression -> ID assign expression','expression',3,'p_expression_write_id','var_parser.py',17),
  ('expression -> import ID','expression',2,'p_expression_import','import_parser.py',18),
  ('sequence -> sequence ; expression','sequence',3,'p_expression_expressions','sequences_parser.py',18),
  ('sequence -> expression','sequence',1,'p_expression_expressions','sequences_parser.py',19),
  ('expression -> ID . ID','expression',3,'p_expression_struct_use','struct_parser.py',19),
  ('expression -> - expression','expression',2,'p_expr_uminus','top_parser.py',19),
  ('expression -> char','expression',1,'p_expression_types_char','types_parser.py',20),
  ('expression -> if expression then expression','expression',4,'p_expression_if_then','control_parser.py',21),
  ('expression -> expression + expression','expression',3,'p_expression_binary_operators_arith','arith_parser.py',24),
  ('expression -> expression - expression','expression',3,'p_expression_binary_operators_arith','arith_parser.py',25),
  ('expression -> expression * expression','expression',3,'p_expression_binary_operators_arith','arith_parser.py',26),
  ('expression -> expression / expression','expression',3,'p_expression_binary_operators_arith','arith_parser.py',27),
  ('id_list -> expression , id_list','id_list',3,'p_expression_expr_ids2','lambda_parser.py',24),
  ('id_list -> expression','id_list',1,'p_expression_expr_ids2','lambda_parser.py',25),
  ('expression -> [ id_list ]','expression',3,'p_expression_types_array','types_parser.py',24),
  ('expression -> if expression then expression else expression','expression',6,'p_expression_if_then_else','control_parser.py',25),
  ('expression -> ID [ NUMBER ]','expression',4,'p_expression_types_array_call','types_parser.py',28),
  ('expression -> not expression','expression',2,'p_expression_unary_operators','bool_parser.py',30),
  ('expression -> loop expression do expression','expression',4,'p_expression_loop_do_expr','control_parser.py',32),
  ('expression -> ( id_list )','expression',3,'p_expression_types_list','types_parser.py',32),
  ('expression -> NUMBER','expression',1,'p_expression_num','arith_parser.py',33),
  ('expression -> ( id_list ) lambda expression','expression',5,'p_expression_lambda_args','lambda_parser.py',34),
  ('expression -> BOOL','expression',1,'p_expression_bool','bool_parser.py',35),
  ('expression -> ( expression )','expression',3,'p_expression_paren','arith_parser.py',37),
  ('expression -> ID ( )','expression',3,'p_expression_call_no_vars','lambda_parser.py',38),
  ('expression -> ID ( id_list )','expression',4,'p_expression_call_args','lambda_parser.py',42),
  ('expression -> for expression ; expression ; expression do expression','expression',8,'p_expression_for_do_expr','control_parser.py',43),
  ('expression -> while expression do expression','expression',4,'p_expression_while_do_expr','control_parser.py',48),
]
