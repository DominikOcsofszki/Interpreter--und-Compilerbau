Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> expression PLUS expression
Rule 2     expression -> expression MINUS expression
Rule 3     expression -> NUMBER
Rule 4     expression -> expression and expression
Rule 5     expression -> expression eq expression
Rule 6     expression -> expression eqcomp expression
Rule 7     expression -> expression ge expression
Rule 8     expression -> expression gt expression
Rule 9     expression -> expression le expression
Rule 10    expression -> expression lt expression
Rule 11    expression -> expression noteqcomp expression
Rule 12    expression -> expression or expression
Rule 13    expression -> expression nand expression
Rule 14    expression -> expression TIMES expression
Rule 15    expression -> expression DIVIDE expression
Rule 16    expression -> LPAREN expression RPAREN
Rule 17    expression -> not expression
Rule 18    expression -> false
Rule 19    expression -> true

Terminals, with rules where they appear

DIVIDE               : 15
LPAREN               : 16
MINUS                : 2
NUMBER               : 3
PLUS                 : 1
RPAREN               : 16
TIMES                : 14
and                  : 4
eq                   : 5
eqcomp               : 6
error                : 
false                : 18
ge                   : 7
gt                   : 8
le                   : 9
lt                   : 10
nand                 : 13
not                  : 17
noteqcomp            : 11
or                   : 12
true                 : 19

Nonterminals, with rules where they appear

expression           : 1 1 2 2 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 17 0

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . NUMBER
    (4) expression -> . expression and expression
    (5) expression -> . expression eq expression
    (6) expression -> . expression eqcomp expression
    (7) expression -> . expression ge expression
    (8) expression -> . expression gt expression
    (9) expression -> . expression le expression
    (10) expression -> . expression lt expression
    (11) expression -> . expression noteqcomp expression
    (12) expression -> . expression or expression
    (13) expression -> . expression nand expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . not expression
    (18) expression -> . false
    (19) expression -> . true

    NUMBER          shift and go to state 2
    LPAREN          shift and go to state 3
    not             shift and go to state 4
    false           shift and go to state 5
    true            shift and go to state 6

    expression                     shift and go to state 1

state 1

    (0) S' -> expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (4) expression -> expression . and expression
    (5) expression -> expression . eq expression
    (6) expression -> expression . eqcomp expression
    (7) expression -> expression . ge expression
    (8) expression -> expression . gt expression
    (9) expression -> expression . le expression
    (10) expression -> expression . lt expression
    (11) expression -> expression . noteqcomp expression
    (12) expression -> expression . or expression
    (13) expression -> expression . nand expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression

    PLUS            shift and go to state 7
    MINUS           shift and go to state 8
    and             shift and go to state 9
    eq              shift and go to state 10
    eqcomp          shift and go to state 11
    ge              shift and go to state 12
    gt              shift and go to state 13
    le              shift and go to state 14
    lt              shift and go to state 15
    noteqcomp       shift and go to state 16
    or              shift and go to state 17
    nand            shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20


state 2

    (3) expression -> NUMBER .

    PLUS            reduce using rule 3 (expression -> NUMBER .)
    MINUS           reduce using rule 3 (expression -> NUMBER .)
    and             reduce using rule 3 (expression -> NUMBER .)
    eq              reduce using rule 3 (expression -> NUMBER .)
    eqcomp          reduce using rule 3 (expression -> NUMBER .)
    ge              reduce using rule 3 (expression -> NUMBER .)
    gt              reduce using rule 3 (expression -> NUMBER .)
    le              reduce using rule 3 (expression -> NUMBER .)
    lt              reduce using rule 3 (expression -> NUMBER .)
    noteqcomp       reduce using rule 3 (expression -> NUMBER .)
    or              reduce using rule 3 (expression -> NUMBER .)
    nand            reduce using rule 3 (expression -> NUMBER .)
    TIMES           reduce using rule 3 (expression -> NUMBER .)
    DIVIDE          reduce using rule 3 (expression -> NUMBER .)
    $end            reduce using rule 3 (expression -> NUMBER .)
    RPAREN          reduce using rule 3 (expression -> NUMBER .)


state 3

    (16) expression -> LPAREN . expression RPAREN
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . NUMBER
    (4) expression -> . expression and expression
    (5) expression -> . expression eq expression
    (6) expression -> . expression eqcomp expression
    (7) expression -> . expression ge expression
    (8) expression -> . expression gt expression
    (9) expression -> . expression le expression
    (10) expression -> . expression lt expression
    (11) expression -> . expression noteqcomp expression
    (12) expression -> . expression or expression
    (13) expression -> . expression nand expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . not expression
    (18) expression -> . false
    (19) expression -> . true

    NUMBER          shift and go to state 2
    LPAREN          shift and go to state 3
    not             shift and go to state 4
    false           shift and go to state 5
    true            shift and go to state 6

    expression                     shift and go to state 21

state 4

    (17) expression -> not . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . NUMBER
    (4) expression -> . expression and expression
    (5) expression -> . expression eq expression
    (6) expression -> . expression eqcomp expression
    (7) expression -> . expression ge expression
    (8) expression -> . expression gt expression
    (9) expression -> . expression le expression
    (10) expression -> . expression lt expression
    (11) expression -> . expression noteqcomp expression
    (12) expression -> . expression or expression
    (13) expression -> . expression nand expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . not expression
    (18) expression -> . false
    (19) expression -> . true

    NUMBER          shift and go to state 2
    LPAREN          shift and go to state 3
    not             shift and go to state 4
    false           shift and go to state 5
    true            shift and go to state 6

    expression                     shift and go to state 22

state 5

    (18) expression -> false .

    PLUS            reduce using rule 18 (expression -> false .)
    MINUS           reduce using rule 18 (expression -> false .)
    and             reduce using rule 18 (expression -> false .)
    eq              reduce using rule 18 (expression -> false .)
    eqcomp          reduce using rule 18 (expression -> false .)
    ge              reduce using rule 18 (expression -> false .)
    gt              reduce using rule 18 (expression -> false .)
    le              reduce using rule 18 (expression -> false .)
    lt              reduce using rule 18 (expression -> false .)
    noteqcomp       reduce using rule 18 (expression -> false .)
    or              reduce using rule 18 (expression -> false .)
    nand            reduce using rule 18 (expression -> false .)
    TIMES           reduce using rule 18 (expression -> false .)
    DIVIDE          reduce using rule 18 (expression -> false .)
    $end            reduce using rule 18 (expression -> false .)
    RPAREN          reduce using rule 18 (expression -> false .)


state 6

    (19) expression -> true .

    PLUS            reduce using rule 19 (expression -> true .)
    MINUS           reduce using rule 19 (expression -> true .)
    and             reduce using rule 19 (expression -> true .)
    eq              reduce using rule 19 (expression -> true .)
    eqcomp          reduce using rule 19 (expression -> true .)
    ge              reduce using rule 19 (expression -> true .)
    gt              reduce using rule 19 (expression -> true .)
    le              reduce using rule 19 (expression -> true .)
    lt              reduce using rule 19 (expression -> true .)
    noteqcomp       reduce using rule 19 (expression -> true .)
    or              reduce using rule 19 (expression -> true .)
    nand            reduce using rule 19 (expression -> true .)
    TIMES           reduce using rule 19 (expression -> true .)
    DIVIDE          reduce using rule 19 (expression -> true .)
    $end            reduce using rule 19 (expression -> true .)
    RPAREN          reduce using rule 19 (expression -> true .)


state 7

    (1) expression -> expression PLUS . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . NUMBER
    (4) expression -> . expression and expression
    (5) expression -> . expression eq expression
    (6) expression -> . expression eqcomp expression
    (7) expression -> . expression ge expression
    (8) expression -> . expression gt expression
    (9) expression -> . expression le expression
    (10) expression -> . expression lt expression
    (11) expression -> . expression noteqcomp expression
    (12) expression -> . expression or expression
    (13) expression -> . expression nand expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . not expression
    (18) expression -> . false
    (19) expression -> . true

    NUMBER          shift and go to state 2
    LPAREN          shift and go to state 3
    not             shift and go to state 4
    false           shift and go to state 5
    true            shift and go to state 6

    expression                     shift and go to state 23

state 8

    (2) expression -> expression MINUS . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . NUMBER
    (4) expression -> . expression and expression
    (5) expression -> . expression eq expression
    (6) expression -> . expression eqcomp expression
    (7) expression -> . expression ge expression
    (8) expression -> . expression gt expression
    (9) expression -> . expression le expression
    (10) expression -> . expression lt expression
    (11) expression -> . expression noteqcomp expression
    (12) expression -> . expression or expression
    (13) expression -> . expression nand expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . not expression
    (18) expression -> . false
    (19) expression -> . true

    NUMBER          shift and go to state 2
    LPAREN          shift and go to state 3
    not             shift and go to state 4
    false           shift and go to state 5
    true            shift and go to state 6

    expression                     shift and go to state 24

state 9

    (4) expression -> expression and . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . NUMBER
    (4) expression -> . expression and expression
    (5) expression -> . expression eq expression
    (6) expression -> . expression eqcomp expression
    (7) expression -> . expression ge expression
    (8) expression -> . expression gt expression
    (9) expression -> . expression le expression
    (10) expression -> . expression lt expression
    (11) expression -> . expression noteqcomp expression
    (12) expression -> . expression or expression
    (13) expression -> . expression nand expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . not expression
    (18) expression -> . false
    (19) expression -> . true

    NUMBER          shift and go to state 2
    LPAREN          shift and go to state 3
    not             shift and go to state 4
    false           shift and go to state 5
    true            shift and go to state 6

    expression                     shift and go to state 25

state 10

    (5) expression -> expression eq . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . NUMBER
    (4) expression -> . expression and expression
    (5) expression -> . expression eq expression
    (6) expression -> . expression eqcomp expression
    (7) expression -> . expression ge expression
    (8) expression -> . expression gt expression
    (9) expression -> . expression le expression
    (10) expression -> . expression lt expression
    (11) expression -> . expression noteqcomp expression
    (12) expression -> . expression or expression
    (13) expression -> . expression nand expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . not expression
    (18) expression -> . false
    (19) expression -> . true

    NUMBER          shift and go to state 2
    LPAREN          shift and go to state 3
    not             shift and go to state 4
    false           shift and go to state 5
    true            shift and go to state 6

    expression                     shift and go to state 26

state 11

    (6) expression -> expression eqcomp . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . NUMBER
    (4) expression -> . expression and expression
    (5) expression -> . expression eq expression
    (6) expression -> . expression eqcomp expression
    (7) expression -> . expression ge expression
    (8) expression -> . expression gt expression
    (9) expression -> . expression le expression
    (10) expression -> . expression lt expression
    (11) expression -> . expression noteqcomp expression
    (12) expression -> . expression or expression
    (13) expression -> . expression nand expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . not expression
    (18) expression -> . false
    (19) expression -> . true

    NUMBER          shift and go to state 2
    LPAREN          shift and go to state 3
    not             shift and go to state 4
    false           shift and go to state 5
    true            shift and go to state 6

    expression                     shift and go to state 27

state 12

    (7) expression -> expression ge . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . NUMBER
    (4) expression -> . expression and expression
    (5) expression -> . expression eq expression
    (6) expression -> . expression eqcomp expression
    (7) expression -> . expression ge expression
    (8) expression -> . expression gt expression
    (9) expression -> . expression le expression
    (10) expression -> . expression lt expression
    (11) expression -> . expression noteqcomp expression
    (12) expression -> . expression or expression
    (13) expression -> . expression nand expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . not expression
    (18) expression -> . false
    (19) expression -> . true

    NUMBER          shift and go to state 2
    LPAREN          shift and go to state 3
    not             shift and go to state 4
    false           shift and go to state 5
    true            shift and go to state 6

    expression                     shift and go to state 28

state 13

    (8) expression -> expression gt . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . NUMBER
    (4) expression -> . expression and expression
    (5) expression -> . expression eq expression
    (6) expression -> . expression eqcomp expression
    (7) expression -> . expression ge expression
    (8) expression -> . expression gt expression
    (9) expression -> . expression le expression
    (10) expression -> . expression lt expression
    (11) expression -> . expression noteqcomp expression
    (12) expression -> . expression or expression
    (13) expression -> . expression nand expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . not expression
    (18) expression -> . false
    (19) expression -> . true

    NUMBER          shift and go to state 2
    LPAREN          shift and go to state 3
    not             shift and go to state 4
    false           shift and go to state 5
    true            shift and go to state 6

    expression                     shift and go to state 29

state 14

    (9) expression -> expression le . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . NUMBER
    (4) expression -> . expression and expression
    (5) expression -> . expression eq expression
    (6) expression -> . expression eqcomp expression
    (7) expression -> . expression ge expression
    (8) expression -> . expression gt expression
    (9) expression -> . expression le expression
    (10) expression -> . expression lt expression
    (11) expression -> . expression noteqcomp expression
    (12) expression -> . expression or expression
    (13) expression -> . expression nand expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . not expression
    (18) expression -> . false
    (19) expression -> . true

    NUMBER          shift and go to state 2
    LPAREN          shift and go to state 3
    not             shift and go to state 4
    false           shift and go to state 5
    true            shift and go to state 6

    expression                     shift and go to state 30

state 15

    (10) expression -> expression lt . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . NUMBER
    (4) expression -> . expression and expression
    (5) expression -> . expression eq expression
    (6) expression -> . expression eqcomp expression
    (7) expression -> . expression ge expression
    (8) expression -> . expression gt expression
    (9) expression -> . expression le expression
    (10) expression -> . expression lt expression
    (11) expression -> . expression noteqcomp expression
    (12) expression -> . expression or expression
    (13) expression -> . expression nand expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . not expression
    (18) expression -> . false
    (19) expression -> . true

    NUMBER          shift and go to state 2
    LPAREN          shift and go to state 3
    not             shift and go to state 4
    false           shift and go to state 5
    true            shift and go to state 6

    expression                     shift and go to state 31

state 16

    (11) expression -> expression noteqcomp . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . NUMBER
    (4) expression -> . expression and expression
    (5) expression -> . expression eq expression
    (6) expression -> . expression eqcomp expression
    (7) expression -> . expression ge expression
    (8) expression -> . expression gt expression
    (9) expression -> . expression le expression
    (10) expression -> . expression lt expression
    (11) expression -> . expression noteqcomp expression
    (12) expression -> . expression or expression
    (13) expression -> . expression nand expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . not expression
    (18) expression -> . false
    (19) expression -> . true

    NUMBER          shift and go to state 2
    LPAREN          shift and go to state 3
    not             shift and go to state 4
    false           shift and go to state 5
    true            shift and go to state 6

    expression                     shift and go to state 32

state 17

    (12) expression -> expression or . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . NUMBER
    (4) expression -> . expression and expression
    (5) expression -> . expression eq expression
    (6) expression -> . expression eqcomp expression
    (7) expression -> . expression ge expression
    (8) expression -> . expression gt expression
    (9) expression -> . expression le expression
    (10) expression -> . expression lt expression
    (11) expression -> . expression noteqcomp expression
    (12) expression -> . expression or expression
    (13) expression -> . expression nand expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . not expression
    (18) expression -> . false
    (19) expression -> . true

    NUMBER          shift and go to state 2
    LPAREN          shift and go to state 3
    not             shift and go to state 4
    false           shift and go to state 5
    true            shift and go to state 6

    expression                     shift and go to state 33

state 18

    (13) expression -> expression nand . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . NUMBER
    (4) expression -> . expression and expression
    (5) expression -> . expression eq expression
    (6) expression -> . expression eqcomp expression
    (7) expression -> . expression ge expression
    (8) expression -> . expression gt expression
    (9) expression -> . expression le expression
    (10) expression -> . expression lt expression
    (11) expression -> . expression noteqcomp expression
    (12) expression -> . expression or expression
    (13) expression -> . expression nand expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . not expression
    (18) expression -> . false
    (19) expression -> . true

    NUMBER          shift and go to state 2
    LPAREN          shift and go to state 3
    not             shift and go to state 4
    false           shift and go to state 5
    true            shift and go to state 6

    expression                     shift and go to state 34

state 19

    (14) expression -> expression TIMES . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . NUMBER
    (4) expression -> . expression and expression
    (5) expression -> . expression eq expression
    (6) expression -> . expression eqcomp expression
    (7) expression -> . expression ge expression
    (8) expression -> . expression gt expression
    (9) expression -> . expression le expression
    (10) expression -> . expression lt expression
    (11) expression -> . expression noteqcomp expression
    (12) expression -> . expression or expression
    (13) expression -> . expression nand expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . not expression
    (18) expression -> . false
    (19) expression -> . true

    NUMBER          shift and go to state 2
    LPAREN          shift and go to state 3
    not             shift and go to state 4
    false           shift and go to state 5
    true            shift and go to state 6

    expression                     shift and go to state 35

state 20

    (15) expression -> expression DIVIDE . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . NUMBER
    (4) expression -> . expression and expression
    (5) expression -> . expression eq expression
    (6) expression -> . expression eqcomp expression
    (7) expression -> . expression ge expression
    (8) expression -> . expression gt expression
    (9) expression -> . expression le expression
    (10) expression -> . expression lt expression
    (11) expression -> . expression noteqcomp expression
    (12) expression -> . expression or expression
    (13) expression -> . expression nand expression
    (14) expression -> . expression TIMES expression
    (15) expression -> . expression DIVIDE expression
    (16) expression -> . LPAREN expression RPAREN
    (17) expression -> . not expression
    (18) expression -> . false
    (19) expression -> . true

    NUMBER          shift and go to state 2
    LPAREN          shift and go to state 3
    not             shift and go to state 4
    false           shift and go to state 5
    true            shift and go to state 6

    expression                     shift and go to state 36

state 21

    (16) expression -> LPAREN expression . RPAREN
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (4) expression -> expression . and expression
    (5) expression -> expression . eq expression
    (6) expression -> expression . eqcomp expression
    (7) expression -> expression . ge expression
    (8) expression -> expression . gt expression
    (9) expression -> expression . le expression
    (10) expression -> expression . lt expression
    (11) expression -> expression . noteqcomp expression
    (12) expression -> expression . or expression
    (13) expression -> expression . nand expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 37
    PLUS            shift and go to state 7
    MINUS           shift and go to state 8
    and             shift and go to state 9
    eq              shift and go to state 10
    eqcomp          shift and go to state 11
    ge              shift and go to state 12
    gt              shift and go to state 13
    le              shift and go to state 14
    lt              shift and go to state 15
    noteqcomp       shift and go to state 16
    or              shift and go to state 17
    nand            shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20


state 22

    (17) expression -> not expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (4) expression -> expression . and expression
    (5) expression -> expression . eq expression
    (6) expression -> expression . eqcomp expression
    (7) expression -> expression . ge expression
    (8) expression -> expression . gt expression
    (9) expression -> expression . le expression
    (10) expression -> expression . lt expression
    (11) expression -> expression . noteqcomp expression
    (12) expression -> expression . or expression
    (13) expression -> expression . nand expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 17 (expression -> not expression .)
    MINUS           reduce using rule 17 (expression -> not expression .)
    and             reduce using rule 17 (expression -> not expression .)
    eq              reduce using rule 17 (expression -> not expression .)
    eqcomp          reduce using rule 17 (expression -> not expression .)
    ge              reduce using rule 17 (expression -> not expression .)
    gt              reduce using rule 17 (expression -> not expression .)
    le              reduce using rule 17 (expression -> not expression .)
    lt              reduce using rule 17 (expression -> not expression .)
    noteqcomp       reduce using rule 17 (expression -> not expression .)
    or              reduce using rule 17 (expression -> not expression .)
    nand            reduce using rule 17 (expression -> not expression .)
    TIMES           reduce using rule 17 (expression -> not expression .)
    DIVIDE          reduce using rule 17 (expression -> not expression .)
    $end            reduce using rule 17 (expression -> not expression .)
    RPAREN          reduce using rule 17 (expression -> not expression .)

  ! PLUS            [ shift and go to state 7 ]
  ! MINUS           [ shift and go to state 8 ]
  ! and             [ shift and go to state 9 ]
  ! eq              [ shift and go to state 10 ]
  ! eqcomp          [ shift and go to state 11 ]
  ! ge              [ shift and go to state 12 ]
  ! gt              [ shift and go to state 13 ]
  ! le              [ shift and go to state 14 ]
  ! lt              [ shift and go to state 15 ]
  ! noteqcomp       [ shift and go to state 16 ]
  ! or              [ shift and go to state 17 ]
  ! nand            [ shift and go to state 18 ]
  ! TIMES           [ shift and go to state 19 ]
  ! DIVIDE          [ shift and go to state 20 ]


state 23

    (1) expression -> expression PLUS expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (4) expression -> expression . and expression
    (5) expression -> expression . eq expression
    (6) expression -> expression . eqcomp expression
    (7) expression -> expression . ge expression
    (8) expression -> expression . gt expression
    (9) expression -> expression . le expression
    (10) expression -> expression . lt expression
    (11) expression -> expression . noteqcomp expression
    (12) expression -> expression . or expression
    (13) expression -> expression . nand expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 1 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 1 (expression -> expression PLUS expression .)
    $end            reduce using rule 1 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 1 (expression -> expression PLUS expression .)
    and             shift and go to state 9
    eq              shift and go to state 10
    eqcomp          shift and go to state 11
    ge              shift and go to state 12
    gt              shift and go to state 13
    le              shift and go to state 14
    lt              shift and go to state 15
    noteqcomp       shift and go to state 16
    or              shift and go to state 17
    nand            shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20

  ! and             [ reduce using rule 1 (expression -> expression PLUS expression .) ]
  ! eq              [ reduce using rule 1 (expression -> expression PLUS expression .) ]
  ! eqcomp          [ reduce using rule 1 (expression -> expression PLUS expression .) ]
  ! ge              [ reduce using rule 1 (expression -> expression PLUS expression .) ]
  ! gt              [ reduce using rule 1 (expression -> expression PLUS expression .) ]
  ! le              [ reduce using rule 1 (expression -> expression PLUS expression .) ]
  ! lt              [ reduce using rule 1 (expression -> expression PLUS expression .) ]
  ! noteqcomp       [ reduce using rule 1 (expression -> expression PLUS expression .) ]
  ! or              [ reduce using rule 1 (expression -> expression PLUS expression .) ]
  ! nand            [ reduce using rule 1 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 1 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 1 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 7 ]
  ! MINUS           [ shift and go to state 8 ]


state 24

    (2) expression -> expression MINUS expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (4) expression -> expression . and expression
    (5) expression -> expression . eq expression
    (6) expression -> expression . eqcomp expression
    (7) expression -> expression . ge expression
    (8) expression -> expression . gt expression
    (9) expression -> expression . le expression
    (10) expression -> expression . lt expression
    (11) expression -> expression . noteqcomp expression
    (12) expression -> expression . or expression
    (13) expression -> expression . nand expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 2 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 2 (expression -> expression MINUS expression .)
    $end            reduce using rule 2 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 2 (expression -> expression MINUS expression .)
    and             shift and go to state 9
    eq              shift and go to state 10
    eqcomp          shift and go to state 11
    ge              shift and go to state 12
    gt              shift and go to state 13
    le              shift and go to state 14
    lt              shift and go to state 15
    noteqcomp       shift and go to state 16
    or              shift and go to state 17
    nand            shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20

  ! and             [ reduce using rule 2 (expression -> expression MINUS expression .) ]
  ! eq              [ reduce using rule 2 (expression -> expression MINUS expression .) ]
  ! eqcomp          [ reduce using rule 2 (expression -> expression MINUS expression .) ]
  ! ge              [ reduce using rule 2 (expression -> expression MINUS expression .) ]
  ! gt              [ reduce using rule 2 (expression -> expression MINUS expression .) ]
  ! le              [ reduce using rule 2 (expression -> expression MINUS expression .) ]
  ! lt              [ reduce using rule 2 (expression -> expression MINUS expression .) ]
  ! noteqcomp       [ reduce using rule 2 (expression -> expression MINUS expression .) ]
  ! or              [ reduce using rule 2 (expression -> expression MINUS expression .) ]
  ! nand            [ reduce using rule 2 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 2 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 2 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 7 ]
  ! MINUS           [ shift and go to state 8 ]


state 25

    (4) expression -> expression and expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (4) expression -> expression . and expression
    (5) expression -> expression . eq expression
    (6) expression -> expression . eqcomp expression
    (7) expression -> expression . ge expression
    (8) expression -> expression . gt expression
    (9) expression -> expression . le expression
    (10) expression -> expression . lt expression
    (11) expression -> expression . noteqcomp expression
    (12) expression -> expression . or expression
    (13) expression -> expression . nand expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 4 (expression -> expression and expression .)
    MINUS           reduce using rule 4 (expression -> expression and expression .)
    and             reduce using rule 4 (expression -> expression and expression .)
    or              reduce using rule 4 (expression -> expression and expression .)
    nand            reduce using rule 4 (expression -> expression and expression .)
    TIMES           reduce using rule 4 (expression -> expression and expression .)
    DIVIDE          reduce using rule 4 (expression -> expression and expression .)
    $end            reduce using rule 4 (expression -> expression and expression .)
    RPAREN          reduce using rule 4 (expression -> expression and expression .)
    eq              shift and go to state 10
    eqcomp          shift and go to state 11
    ge              shift and go to state 12
    gt              shift and go to state 13
    le              shift and go to state 14
    lt              shift and go to state 15
    noteqcomp       shift and go to state 16

  ! eq              [ reduce using rule 4 (expression -> expression and expression .) ]
  ! eqcomp          [ reduce using rule 4 (expression -> expression and expression .) ]
  ! ge              [ reduce using rule 4 (expression -> expression and expression .) ]
  ! gt              [ reduce using rule 4 (expression -> expression and expression .) ]
  ! le              [ reduce using rule 4 (expression -> expression and expression .) ]
  ! lt              [ reduce using rule 4 (expression -> expression and expression .) ]
  ! noteqcomp       [ reduce using rule 4 (expression -> expression and expression .) ]
  ! PLUS            [ shift and go to state 7 ]
  ! MINUS           [ shift and go to state 8 ]
  ! and             [ shift and go to state 9 ]
  ! or              [ shift and go to state 17 ]
  ! nand            [ shift and go to state 18 ]
  ! TIMES           [ shift and go to state 19 ]
  ! DIVIDE          [ shift and go to state 20 ]


state 26

    (5) expression -> expression eq expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (4) expression -> expression . and expression
    (5) expression -> expression . eq expression
    (6) expression -> expression . eqcomp expression
    (7) expression -> expression . ge expression
    (8) expression -> expression . gt expression
    (9) expression -> expression . le expression
    (10) expression -> expression . lt expression
    (11) expression -> expression . noteqcomp expression
    (12) expression -> expression . or expression
    (13) expression -> expression . nand expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 5 (expression -> expression eq expression .)
    MINUS           reduce using rule 5 (expression -> expression eq expression .)
    and             reduce using rule 5 (expression -> expression eq expression .)
    eq              reduce using rule 5 (expression -> expression eq expression .)
    eqcomp          reduce using rule 5 (expression -> expression eq expression .)
    noteqcomp       reduce using rule 5 (expression -> expression eq expression .)
    or              reduce using rule 5 (expression -> expression eq expression .)
    nand            reduce using rule 5 (expression -> expression eq expression .)
    TIMES           reduce using rule 5 (expression -> expression eq expression .)
    DIVIDE          reduce using rule 5 (expression -> expression eq expression .)
    $end            reduce using rule 5 (expression -> expression eq expression .)
    RPAREN          reduce using rule 5 (expression -> expression eq expression .)
    ge              shift and go to state 12
    gt              shift and go to state 13
    le              shift and go to state 14
    lt              shift and go to state 15

  ! ge              [ reduce using rule 5 (expression -> expression eq expression .) ]
  ! gt              [ reduce using rule 5 (expression -> expression eq expression .) ]
  ! le              [ reduce using rule 5 (expression -> expression eq expression .) ]
  ! lt              [ reduce using rule 5 (expression -> expression eq expression .) ]
  ! PLUS            [ shift and go to state 7 ]
  ! MINUS           [ shift and go to state 8 ]
  ! and             [ shift and go to state 9 ]
  ! eq              [ shift and go to state 10 ]
  ! eqcomp          [ shift and go to state 11 ]
  ! noteqcomp       [ shift and go to state 16 ]
  ! or              [ shift and go to state 17 ]
  ! nand            [ shift and go to state 18 ]
  ! TIMES           [ shift and go to state 19 ]
  ! DIVIDE          [ shift and go to state 20 ]


state 27

    (6) expression -> expression eqcomp expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (4) expression -> expression . and expression
    (5) expression -> expression . eq expression
    (6) expression -> expression . eqcomp expression
    (7) expression -> expression . ge expression
    (8) expression -> expression . gt expression
    (9) expression -> expression . le expression
    (10) expression -> expression . lt expression
    (11) expression -> expression . noteqcomp expression
    (12) expression -> expression . or expression
    (13) expression -> expression . nand expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 6 (expression -> expression eqcomp expression .)
    MINUS           reduce using rule 6 (expression -> expression eqcomp expression .)
    and             reduce using rule 6 (expression -> expression eqcomp expression .)
    eq              reduce using rule 6 (expression -> expression eqcomp expression .)
    eqcomp          reduce using rule 6 (expression -> expression eqcomp expression .)
    noteqcomp       reduce using rule 6 (expression -> expression eqcomp expression .)
    or              reduce using rule 6 (expression -> expression eqcomp expression .)
    nand            reduce using rule 6 (expression -> expression eqcomp expression .)
    TIMES           reduce using rule 6 (expression -> expression eqcomp expression .)
    DIVIDE          reduce using rule 6 (expression -> expression eqcomp expression .)
    $end            reduce using rule 6 (expression -> expression eqcomp expression .)
    RPAREN          reduce using rule 6 (expression -> expression eqcomp expression .)
    ge              shift and go to state 12
    gt              shift and go to state 13
    le              shift and go to state 14
    lt              shift and go to state 15

  ! ge              [ reduce using rule 6 (expression -> expression eqcomp expression .) ]
  ! gt              [ reduce using rule 6 (expression -> expression eqcomp expression .) ]
  ! le              [ reduce using rule 6 (expression -> expression eqcomp expression .) ]
  ! lt              [ reduce using rule 6 (expression -> expression eqcomp expression .) ]
  ! PLUS            [ shift and go to state 7 ]
  ! MINUS           [ shift and go to state 8 ]
  ! and             [ shift and go to state 9 ]
  ! eq              [ shift and go to state 10 ]
  ! eqcomp          [ shift and go to state 11 ]
  ! noteqcomp       [ shift and go to state 16 ]
  ! or              [ shift and go to state 17 ]
  ! nand            [ shift and go to state 18 ]
  ! TIMES           [ shift and go to state 19 ]
  ! DIVIDE          [ shift and go to state 20 ]


state 28

    (7) expression -> expression ge expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (4) expression -> expression . and expression
    (5) expression -> expression . eq expression
    (6) expression -> expression . eqcomp expression
    (7) expression -> expression . ge expression
    (8) expression -> expression . gt expression
    (9) expression -> expression . le expression
    (10) expression -> expression . lt expression
    (11) expression -> expression . noteqcomp expression
    (12) expression -> expression . or expression
    (13) expression -> expression . nand expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 7 (expression -> expression ge expression .)
    MINUS           reduce using rule 7 (expression -> expression ge expression .)
    and             reduce using rule 7 (expression -> expression ge expression .)
    eq              reduce using rule 7 (expression -> expression ge expression .)
    eqcomp          reduce using rule 7 (expression -> expression ge expression .)
    ge              reduce using rule 7 (expression -> expression ge expression .)
    gt              reduce using rule 7 (expression -> expression ge expression .)
    le              reduce using rule 7 (expression -> expression ge expression .)
    lt              reduce using rule 7 (expression -> expression ge expression .)
    noteqcomp       reduce using rule 7 (expression -> expression ge expression .)
    or              reduce using rule 7 (expression -> expression ge expression .)
    nand            reduce using rule 7 (expression -> expression ge expression .)
    TIMES           reduce using rule 7 (expression -> expression ge expression .)
    DIVIDE          reduce using rule 7 (expression -> expression ge expression .)
    $end            reduce using rule 7 (expression -> expression ge expression .)
    RPAREN          reduce using rule 7 (expression -> expression ge expression .)

  ! PLUS            [ shift and go to state 7 ]
  ! MINUS           [ shift and go to state 8 ]
  ! and             [ shift and go to state 9 ]
  ! eq              [ shift and go to state 10 ]
  ! eqcomp          [ shift and go to state 11 ]
  ! ge              [ shift and go to state 12 ]
  ! gt              [ shift and go to state 13 ]
  ! le              [ shift and go to state 14 ]
  ! lt              [ shift and go to state 15 ]
  ! noteqcomp       [ shift and go to state 16 ]
  ! or              [ shift and go to state 17 ]
  ! nand            [ shift and go to state 18 ]
  ! TIMES           [ shift and go to state 19 ]
  ! DIVIDE          [ shift and go to state 20 ]


state 29

    (8) expression -> expression gt expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (4) expression -> expression . and expression
    (5) expression -> expression . eq expression
    (6) expression -> expression . eqcomp expression
    (7) expression -> expression . ge expression
    (8) expression -> expression . gt expression
    (9) expression -> expression . le expression
    (10) expression -> expression . lt expression
    (11) expression -> expression . noteqcomp expression
    (12) expression -> expression . or expression
    (13) expression -> expression . nand expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 8 (expression -> expression gt expression .)
    MINUS           reduce using rule 8 (expression -> expression gt expression .)
    and             reduce using rule 8 (expression -> expression gt expression .)
    eq              reduce using rule 8 (expression -> expression gt expression .)
    eqcomp          reduce using rule 8 (expression -> expression gt expression .)
    ge              reduce using rule 8 (expression -> expression gt expression .)
    gt              reduce using rule 8 (expression -> expression gt expression .)
    le              reduce using rule 8 (expression -> expression gt expression .)
    lt              reduce using rule 8 (expression -> expression gt expression .)
    noteqcomp       reduce using rule 8 (expression -> expression gt expression .)
    or              reduce using rule 8 (expression -> expression gt expression .)
    nand            reduce using rule 8 (expression -> expression gt expression .)
    TIMES           reduce using rule 8 (expression -> expression gt expression .)
    DIVIDE          reduce using rule 8 (expression -> expression gt expression .)
    $end            reduce using rule 8 (expression -> expression gt expression .)
    RPAREN          reduce using rule 8 (expression -> expression gt expression .)

  ! PLUS            [ shift and go to state 7 ]
  ! MINUS           [ shift and go to state 8 ]
  ! and             [ shift and go to state 9 ]
  ! eq              [ shift and go to state 10 ]
  ! eqcomp          [ shift and go to state 11 ]
  ! ge              [ shift and go to state 12 ]
  ! gt              [ shift and go to state 13 ]
  ! le              [ shift and go to state 14 ]
  ! lt              [ shift and go to state 15 ]
  ! noteqcomp       [ shift and go to state 16 ]
  ! or              [ shift and go to state 17 ]
  ! nand            [ shift and go to state 18 ]
  ! TIMES           [ shift and go to state 19 ]
  ! DIVIDE          [ shift and go to state 20 ]


state 30

    (9) expression -> expression le expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (4) expression -> expression . and expression
    (5) expression -> expression . eq expression
    (6) expression -> expression . eqcomp expression
    (7) expression -> expression . ge expression
    (8) expression -> expression . gt expression
    (9) expression -> expression . le expression
    (10) expression -> expression . lt expression
    (11) expression -> expression . noteqcomp expression
    (12) expression -> expression . or expression
    (13) expression -> expression . nand expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 9 (expression -> expression le expression .)
    MINUS           reduce using rule 9 (expression -> expression le expression .)
    and             reduce using rule 9 (expression -> expression le expression .)
    eq              reduce using rule 9 (expression -> expression le expression .)
    eqcomp          reduce using rule 9 (expression -> expression le expression .)
    ge              reduce using rule 9 (expression -> expression le expression .)
    gt              reduce using rule 9 (expression -> expression le expression .)
    le              reduce using rule 9 (expression -> expression le expression .)
    lt              reduce using rule 9 (expression -> expression le expression .)
    noteqcomp       reduce using rule 9 (expression -> expression le expression .)
    or              reduce using rule 9 (expression -> expression le expression .)
    nand            reduce using rule 9 (expression -> expression le expression .)
    TIMES           reduce using rule 9 (expression -> expression le expression .)
    DIVIDE          reduce using rule 9 (expression -> expression le expression .)
    $end            reduce using rule 9 (expression -> expression le expression .)
    RPAREN          reduce using rule 9 (expression -> expression le expression .)

  ! PLUS            [ shift and go to state 7 ]
  ! MINUS           [ shift and go to state 8 ]
  ! and             [ shift and go to state 9 ]
  ! eq              [ shift and go to state 10 ]
  ! eqcomp          [ shift and go to state 11 ]
  ! ge              [ shift and go to state 12 ]
  ! gt              [ shift and go to state 13 ]
  ! le              [ shift and go to state 14 ]
  ! lt              [ shift and go to state 15 ]
  ! noteqcomp       [ shift and go to state 16 ]
  ! or              [ shift and go to state 17 ]
  ! nand            [ shift and go to state 18 ]
  ! TIMES           [ shift and go to state 19 ]
  ! DIVIDE          [ shift and go to state 20 ]


state 31

    (10) expression -> expression lt expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (4) expression -> expression . and expression
    (5) expression -> expression . eq expression
    (6) expression -> expression . eqcomp expression
    (7) expression -> expression . ge expression
    (8) expression -> expression . gt expression
    (9) expression -> expression . le expression
    (10) expression -> expression . lt expression
    (11) expression -> expression . noteqcomp expression
    (12) expression -> expression . or expression
    (13) expression -> expression . nand expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 10 (expression -> expression lt expression .)
    MINUS           reduce using rule 10 (expression -> expression lt expression .)
    and             reduce using rule 10 (expression -> expression lt expression .)
    eq              reduce using rule 10 (expression -> expression lt expression .)
    eqcomp          reduce using rule 10 (expression -> expression lt expression .)
    ge              reduce using rule 10 (expression -> expression lt expression .)
    gt              reduce using rule 10 (expression -> expression lt expression .)
    le              reduce using rule 10 (expression -> expression lt expression .)
    lt              reduce using rule 10 (expression -> expression lt expression .)
    noteqcomp       reduce using rule 10 (expression -> expression lt expression .)
    or              reduce using rule 10 (expression -> expression lt expression .)
    nand            reduce using rule 10 (expression -> expression lt expression .)
    TIMES           reduce using rule 10 (expression -> expression lt expression .)
    DIVIDE          reduce using rule 10 (expression -> expression lt expression .)
    $end            reduce using rule 10 (expression -> expression lt expression .)
    RPAREN          reduce using rule 10 (expression -> expression lt expression .)

  ! PLUS            [ shift and go to state 7 ]
  ! MINUS           [ shift and go to state 8 ]
  ! and             [ shift and go to state 9 ]
  ! eq              [ shift and go to state 10 ]
  ! eqcomp          [ shift and go to state 11 ]
  ! ge              [ shift and go to state 12 ]
  ! gt              [ shift and go to state 13 ]
  ! le              [ shift and go to state 14 ]
  ! lt              [ shift and go to state 15 ]
  ! noteqcomp       [ shift and go to state 16 ]
  ! or              [ shift and go to state 17 ]
  ! nand            [ shift and go to state 18 ]
  ! TIMES           [ shift and go to state 19 ]
  ! DIVIDE          [ shift and go to state 20 ]


state 32

    (11) expression -> expression noteqcomp expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (4) expression -> expression . and expression
    (5) expression -> expression . eq expression
    (6) expression -> expression . eqcomp expression
    (7) expression -> expression . ge expression
    (8) expression -> expression . gt expression
    (9) expression -> expression . le expression
    (10) expression -> expression . lt expression
    (11) expression -> expression . noteqcomp expression
    (12) expression -> expression . or expression
    (13) expression -> expression . nand expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 11 (expression -> expression noteqcomp expression .)
    MINUS           reduce using rule 11 (expression -> expression noteqcomp expression .)
    and             reduce using rule 11 (expression -> expression noteqcomp expression .)
    eq              reduce using rule 11 (expression -> expression noteqcomp expression .)
    eqcomp          reduce using rule 11 (expression -> expression noteqcomp expression .)
    noteqcomp       reduce using rule 11 (expression -> expression noteqcomp expression .)
    or              reduce using rule 11 (expression -> expression noteqcomp expression .)
    nand            reduce using rule 11 (expression -> expression noteqcomp expression .)
    TIMES           reduce using rule 11 (expression -> expression noteqcomp expression .)
    DIVIDE          reduce using rule 11 (expression -> expression noteqcomp expression .)
    $end            reduce using rule 11 (expression -> expression noteqcomp expression .)
    RPAREN          reduce using rule 11 (expression -> expression noteqcomp expression .)
    ge              shift and go to state 12
    gt              shift and go to state 13
    le              shift and go to state 14
    lt              shift and go to state 15

  ! ge              [ reduce using rule 11 (expression -> expression noteqcomp expression .) ]
  ! gt              [ reduce using rule 11 (expression -> expression noteqcomp expression .) ]
  ! le              [ reduce using rule 11 (expression -> expression noteqcomp expression .) ]
  ! lt              [ reduce using rule 11 (expression -> expression noteqcomp expression .) ]
  ! PLUS            [ shift and go to state 7 ]
  ! MINUS           [ shift and go to state 8 ]
  ! and             [ shift and go to state 9 ]
  ! eq              [ shift and go to state 10 ]
  ! eqcomp          [ shift and go to state 11 ]
  ! noteqcomp       [ shift and go to state 16 ]
  ! or              [ shift and go to state 17 ]
  ! nand            [ shift and go to state 18 ]
  ! TIMES           [ shift and go to state 19 ]
  ! DIVIDE          [ shift and go to state 20 ]


state 33

    (12) expression -> expression or expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (4) expression -> expression . and expression
    (5) expression -> expression . eq expression
    (6) expression -> expression . eqcomp expression
    (7) expression -> expression . ge expression
    (8) expression -> expression . gt expression
    (9) expression -> expression . le expression
    (10) expression -> expression . lt expression
    (11) expression -> expression . noteqcomp expression
    (12) expression -> expression . or expression
    (13) expression -> expression . nand expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 12 (expression -> expression or expression .)
    MINUS           reduce using rule 12 (expression -> expression or expression .)
    or              reduce using rule 12 (expression -> expression or expression .)
    TIMES           reduce using rule 12 (expression -> expression or expression .)
    DIVIDE          reduce using rule 12 (expression -> expression or expression .)
    $end            reduce using rule 12 (expression -> expression or expression .)
    RPAREN          reduce using rule 12 (expression -> expression or expression .)
    and             shift and go to state 9
    eq              shift and go to state 10
    eqcomp          shift and go to state 11
    ge              shift and go to state 12
    gt              shift and go to state 13
    le              shift and go to state 14
    lt              shift and go to state 15
    noteqcomp       shift and go to state 16
    nand            shift and go to state 18

  ! and             [ reduce using rule 12 (expression -> expression or expression .) ]
  ! eq              [ reduce using rule 12 (expression -> expression or expression .) ]
  ! eqcomp          [ reduce using rule 12 (expression -> expression or expression .) ]
  ! ge              [ reduce using rule 12 (expression -> expression or expression .) ]
  ! gt              [ reduce using rule 12 (expression -> expression or expression .) ]
  ! le              [ reduce using rule 12 (expression -> expression or expression .) ]
  ! lt              [ reduce using rule 12 (expression -> expression or expression .) ]
  ! noteqcomp       [ reduce using rule 12 (expression -> expression or expression .) ]
  ! nand            [ reduce using rule 12 (expression -> expression or expression .) ]
  ! PLUS            [ shift and go to state 7 ]
  ! MINUS           [ shift and go to state 8 ]
  ! or              [ shift and go to state 17 ]
  ! TIMES           [ shift and go to state 19 ]
  ! DIVIDE          [ shift and go to state 20 ]


state 34

    (13) expression -> expression nand expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (4) expression -> expression . and expression
    (5) expression -> expression . eq expression
    (6) expression -> expression . eqcomp expression
    (7) expression -> expression . ge expression
    (8) expression -> expression . gt expression
    (9) expression -> expression . le expression
    (10) expression -> expression . lt expression
    (11) expression -> expression . noteqcomp expression
    (12) expression -> expression . or expression
    (13) expression -> expression . nand expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 13 (expression -> expression nand expression .)
    MINUS           reduce using rule 13 (expression -> expression nand expression .)
    and             reduce using rule 13 (expression -> expression nand expression .)
    or              reduce using rule 13 (expression -> expression nand expression .)
    nand            reduce using rule 13 (expression -> expression nand expression .)
    TIMES           reduce using rule 13 (expression -> expression nand expression .)
    DIVIDE          reduce using rule 13 (expression -> expression nand expression .)
    $end            reduce using rule 13 (expression -> expression nand expression .)
    RPAREN          reduce using rule 13 (expression -> expression nand expression .)
    eq              shift and go to state 10
    eqcomp          shift and go to state 11
    ge              shift and go to state 12
    gt              shift and go to state 13
    le              shift and go to state 14
    lt              shift and go to state 15
    noteqcomp       shift and go to state 16

  ! eq              [ reduce using rule 13 (expression -> expression nand expression .) ]
  ! eqcomp          [ reduce using rule 13 (expression -> expression nand expression .) ]
  ! ge              [ reduce using rule 13 (expression -> expression nand expression .) ]
  ! gt              [ reduce using rule 13 (expression -> expression nand expression .) ]
  ! le              [ reduce using rule 13 (expression -> expression nand expression .) ]
  ! lt              [ reduce using rule 13 (expression -> expression nand expression .) ]
  ! noteqcomp       [ reduce using rule 13 (expression -> expression nand expression .) ]
  ! PLUS            [ shift and go to state 7 ]
  ! MINUS           [ shift and go to state 8 ]
  ! and             [ shift and go to state 9 ]
  ! or              [ shift and go to state 17 ]
  ! nand            [ shift and go to state 18 ]
  ! TIMES           [ shift and go to state 19 ]
  ! DIVIDE          [ shift and go to state 20 ]


state 35

    (14) expression -> expression TIMES expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (4) expression -> expression . and expression
    (5) expression -> expression . eq expression
    (6) expression -> expression . eqcomp expression
    (7) expression -> expression . ge expression
    (8) expression -> expression . gt expression
    (9) expression -> expression . le expression
    (10) expression -> expression . lt expression
    (11) expression -> expression . noteqcomp expression
    (12) expression -> expression . or expression
    (13) expression -> expression . nand expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 14 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 14 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 14 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 14 (expression -> expression TIMES expression .)
    $end            reduce using rule 14 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 14 (expression -> expression TIMES expression .)
    and             shift and go to state 9
    eq              shift and go to state 10
    eqcomp          shift and go to state 11
    ge              shift and go to state 12
    gt              shift and go to state 13
    le              shift and go to state 14
    lt              shift and go to state 15
    noteqcomp       shift and go to state 16
    or              shift and go to state 17
    nand            shift and go to state 18

  ! and             [ reduce using rule 14 (expression -> expression TIMES expression .) ]
  ! eq              [ reduce using rule 14 (expression -> expression TIMES expression .) ]
  ! eqcomp          [ reduce using rule 14 (expression -> expression TIMES expression .) ]
  ! ge              [ reduce using rule 14 (expression -> expression TIMES expression .) ]
  ! gt              [ reduce using rule 14 (expression -> expression TIMES expression .) ]
  ! le              [ reduce using rule 14 (expression -> expression TIMES expression .) ]
  ! lt              [ reduce using rule 14 (expression -> expression TIMES expression .) ]
  ! noteqcomp       [ reduce using rule 14 (expression -> expression TIMES expression .) ]
  ! or              [ reduce using rule 14 (expression -> expression TIMES expression .) ]
  ! nand            [ reduce using rule 14 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 7 ]
  ! MINUS           [ shift and go to state 8 ]
  ! TIMES           [ shift and go to state 19 ]
  ! DIVIDE          [ shift and go to state 20 ]


state 36

    (15) expression -> expression DIVIDE expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (4) expression -> expression . and expression
    (5) expression -> expression . eq expression
    (6) expression -> expression . eqcomp expression
    (7) expression -> expression . ge expression
    (8) expression -> expression . gt expression
    (9) expression -> expression . le expression
    (10) expression -> expression . lt expression
    (11) expression -> expression . noteqcomp expression
    (12) expression -> expression . or expression
    (13) expression -> expression . nand expression
    (14) expression -> expression . TIMES expression
    (15) expression -> expression . DIVIDE expression

    PLUS            reduce using rule 15 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 15 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 15 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 15 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 15 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 15 (expression -> expression DIVIDE expression .)
    and             shift and go to state 9
    eq              shift and go to state 10
    eqcomp          shift and go to state 11
    ge              shift and go to state 12
    gt              shift and go to state 13
    le              shift and go to state 14
    lt              shift and go to state 15
    noteqcomp       shift and go to state 16
    or              shift and go to state 17
    nand            shift and go to state 18

  ! and             [ reduce using rule 15 (expression -> expression DIVIDE expression .) ]
  ! eq              [ reduce using rule 15 (expression -> expression DIVIDE expression .) ]
  ! eqcomp          [ reduce using rule 15 (expression -> expression DIVIDE expression .) ]
  ! ge              [ reduce using rule 15 (expression -> expression DIVIDE expression .) ]
  ! gt              [ reduce using rule 15 (expression -> expression DIVIDE expression .) ]
  ! le              [ reduce using rule 15 (expression -> expression DIVIDE expression .) ]
  ! lt              [ reduce using rule 15 (expression -> expression DIVIDE expression .) ]
  ! noteqcomp       [ reduce using rule 15 (expression -> expression DIVIDE expression .) ]
  ! or              [ reduce using rule 15 (expression -> expression DIVIDE expression .) ]
  ! nand            [ reduce using rule 15 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 7 ]
  ! MINUS           [ shift and go to state 8 ]
  ! TIMES           [ shift and go to state 19 ]
  ! DIVIDE          [ shift and go to state 20 ]


state 37

    (16) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    and             reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    eq              reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    eqcomp          reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    ge              reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    gt              reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    le              reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    lt              reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    noteqcomp       reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    or              reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    nand            reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 16 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 16 (expression -> LPAREN expression RPAREN .)

